{"version":3,"sources":["tic-tac-toe/components/tic-tac-toe-square.component.tsx","tic-tac-toe/tic-tac-toe.container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["clickHandler","choosenCharacter","setChoosenCharacter","TicTacToeProps","turn","setTurn","setFirstRow","firstRow","setSecondRow","secondRow","setThirdRow","thirdRow","setFirstColumn","firstColumn","setSecondColumn","secondColumn","setThirdColumn","thirdColumn","setFirstDiagonal","firstDiagonal","setSecondDiagonal","secondDiagonal","setPositionHandler","TicTacToeOptionWrapper","styled","div","allTheSame","possiblePositions","includes","css","TicTacToeSquare","useState","clickHandlerParams","onClick","isAllTheSameValue","array","every","v","TicTacToeWrapper","TicTacToeArea","TicTacToe","setAllTheSame","useEffect","length","mandatoryProps","firstRowProps","secondRowProps","thirdRowProps","firstColumnProps","secondColumnProps","thirdColumnProps","firstDiagonalProps","secondDiagonalProps","ticTacToeSquaresProps","map","ticTacToeSquareProps","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15cc1a35.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport {\r\n  PossiblePosition,\r\n  TicTacToeSquareProps,\r\n  Turn,\r\n} from \"../tic-tac-toe.container\";\r\n\r\ntype ClickHandlerObjectParam = {\r\n  choosenCharacter: Turn | \"\";\r\n  setChoosenCharacter: React.Dispatch<React.SetStateAction<Turn | \"\">>;\r\n  TicTacToeProps: TicTacToeSquareProps;\r\n};\r\n\r\nconst setPositionHandler = (TicTacToeProps: TicTacToeSquareProps) => {\r\n  if (TicTacToeProps.setFirstRow && TicTacToeProps.firstRow) {\r\n    TicTacToeProps.setFirstRow([\r\n      ...TicTacToeProps.firstRow,\r\n      TicTacToeProps.turn,\r\n    ]);\r\n  }\r\n\r\n  if (TicTacToeProps.setSecondRow && TicTacToeProps.secondRow) {\r\n    TicTacToeProps.setSecondRow([\r\n      ...TicTacToeProps.secondRow,\r\n      TicTacToeProps.turn,\r\n    ]);\r\n  }\r\n\r\n  if (TicTacToeProps.setThirdRow && TicTacToeProps.thirdRow) {\r\n    TicTacToeProps.setThirdRow([\r\n      ...TicTacToeProps.thirdRow,\r\n      TicTacToeProps.turn,\r\n    ]);\r\n  }\r\n\r\n  if (TicTacToeProps.setFirstColumn && TicTacToeProps.firstColumn) {\r\n    TicTacToeProps.setFirstColumn([\r\n      ...TicTacToeProps.firstColumn,\r\n      TicTacToeProps.turn,\r\n    ]);\r\n  }\r\n\r\n  if (TicTacToeProps.setSecondColumn && TicTacToeProps.secondColumn) {\r\n    TicTacToeProps.setSecondColumn([\r\n      ...TicTacToeProps.secondColumn,\r\n      TicTacToeProps.turn,\r\n    ]);\r\n  }\r\n\r\n  if (TicTacToeProps.setThirdColumn && TicTacToeProps.thirdColumn) {\r\n    TicTacToeProps.setThirdColumn([\r\n      ...TicTacToeProps.thirdColumn,\r\n      TicTacToeProps.turn,\r\n    ]);\r\n  }\r\n\r\n  if (TicTacToeProps.setFirstDiagonal && TicTacToeProps.firstDiagonal) {\r\n    TicTacToeProps.setFirstDiagonal([\r\n      ...TicTacToeProps.firstDiagonal,\r\n      TicTacToeProps.turn,\r\n    ]);\r\n  }\r\n\r\n  if (TicTacToeProps.setSecondDiagonal && TicTacToeProps.secondDiagonal) {\r\n    TicTacToeProps.setSecondDiagonal([\r\n      ...TicTacToeProps.secondDiagonal,\r\n      TicTacToeProps.turn,\r\n    ]);\r\n  }\r\n};\r\n\r\nconst clickHandler = ({\r\n  choosenCharacter,\r\n  setChoosenCharacter,\r\n  TicTacToeProps,\r\n}: ClickHandlerObjectParam) => {\r\n  if (choosenCharacter === \"\") {\r\n    if (TicTacToeProps.turn === \"X\") {\r\n      setChoosenCharacter(\"X\");\r\n      TicTacToeProps.setTurn(\"O\");\r\n    } else {\r\n      setChoosenCharacter(\"O\");\r\n      TicTacToeProps.setTurn(\"X\");\r\n    }\r\n    setPositionHandler(TicTacToeProps);\r\n  }\r\n};\r\n\r\nconst TicTacToeSquare: React.FC<TicTacToeSquareProps> = ({\r\n  ...TicTacToeProps\r\n}) => {\r\n  const [choosenCharacter, setChoosenCharacter] = useState<Turn | \"\">(\"\");\r\n  const clickHandlerParams = {\r\n    choosenCharacter,\r\n    setChoosenCharacter,\r\n    TicTacToeProps,\r\n  };\r\n  return (\r\n    <TicTacToeOptionWrapper\r\n      allTheSame={TicTacToeProps.allTheSame}\r\n      possiblePositions={TicTacToeProps.possiblePositions}\r\n      onClick={() =>\r\n        TicTacToeProps.allTheSame === \"\" && clickHandler(clickHandlerParams)\r\n      }\r\n    >\r\n      <h2>{choosenCharacter}</h2>\r\n    </TicTacToeOptionWrapper>\r\n  );\r\n};\r\n\r\nconst TicTacToeOptionWrapper = styled.div<{\r\n  allTheSame: PossiblePosition | \"\";\r\n  possiblePositions: PossiblePosition[];\r\n}>`\r\n  cursor: pointer;\r\n  border: 1px solid black;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 166px;\r\n\r\n  ${({ allTheSame, possiblePositions }) =>\r\n    allTheSame && possiblePositions.includes(allTheSame)\r\n      ? css`\r\n          background-color: green;\r\n          color: white;\r\n        `\r\n      : \"\"}\r\n\r\n  h2 {\r\n    text-align: center;\r\n    margin: 0 auto;\r\n    font-size: 70px;\r\n  }\r\n`;\r\n\r\nexport default TicTacToeSquare;\r\n","import { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TicTacToeSquare from \"./components/tic-tac-toe-square.component\";\r\n\r\nexport type Turn = \"X\" | \"O\";\r\n\r\nexport type TicTacToeSquareProps = {\r\n  turn: Turn;\r\n  setTurn: React.Dispatch<React.SetStateAction<Turn>>;\r\n  possiblePositions: PossiblePosition[];\r\n  allTheSame: PossiblePosition | \"\";\r\n  firstRow?: [] | Turn[];\r\n  setFirstRow?: React.Dispatch<React.SetStateAction<[] | Turn[]>>;\r\n  secondRow?: [] | Turn[];\r\n  setSecondRow?: React.Dispatch<React.SetStateAction<[] | Turn[]>>;\r\n  thirdRow?: [] | Turn[];\r\n  setThirdRow?: React.Dispatch<React.SetStateAction<[] | Turn[]>>;\r\n  firstColumn?: [] | Turn[];\r\n  setFirstColumn?: React.Dispatch<React.SetStateAction<[] | Turn[]>>;\r\n  secondColumn?: [] | Turn[];\r\n  setSecondColumn?: React.Dispatch<React.SetStateAction<[] | Turn[]>>;\r\n  thirdColumn?: [] | Turn[];\r\n  setThirdColumn?: React.Dispatch<React.SetStateAction<[] | Turn[]>>;\r\n  firstDiagonal?: [] | Turn[];\r\n  setFirstDiagonal?: React.Dispatch<React.SetStateAction<[] | Turn[]>>;\r\n  secondDiagonal?: [] | Turn[];\r\n  setSecondDiagonal?: React.Dispatch<React.SetStateAction<[] | Turn[]>>;\r\n};\r\n\r\nexport type PossiblePosition =\r\n  | \"firstRow\"\r\n  | \"secondRow\"\r\n  | \"thirdRow\"\r\n  | \"firstColumn\"\r\n  | \"secondColumn\"\r\n  | \"thirdColumn\"\r\n  | \"firstDiagonal\"\r\n  | \"secondDiagonal\";\r\n\r\nconst isAllTheSameValue = (array: Turn[]) => {\r\n  return array.every((v) => v === array[0]);\r\n};\r\n\r\nconst TicTacToe: React.FC = () => {\r\n  const [turn, setTurn] = useState<Turn>(\"X\");\r\n  const [firstRow, setFirstRow] = useState<Turn[] | []>([]);\r\n  const [secondRow, setSecondRow] = useState<Turn[] | []>([]);\r\n  const [thirdRow, setThirdRow] = useState<Turn[] | []>([]);\r\n  const [firstColumn, setFirstColumn] = useState<Turn[] | []>([]);\r\n  const [secondColumn, setSecondColumn] = useState<Turn[] | []>([]);\r\n  const [thirdColumn, setThirdColumn] = useState<Turn[] | []>([]);\r\n  const [firstDiagonal, setFirstDiagonal] = useState<Turn[] | []>([]);\r\n  const [secondDiagonal, setSecondDiagonal] = useState<Turn[] | []>([]);\r\n  const [allTheSame, setAllTheSame] = useState<PossiblePosition | \"\">(\"\");\r\n\r\n  useEffect(() => {\r\n    if (firstRow.length === 3) {\r\n      if (isAllTheSameValue(firstRow)) {\r\n        setAllTheSame(\"firstRow\");\r\n      }\r\n    }\r\n  }, [firstRow]);\r\n\r\n  useEffect(() => {\r\n    if (secondRow.length === 3) {\r\n      if (isAllTheSameValue(secondRow)) {\r\n        setAllTheSame(\"secondRow\");\r\n      }\r\n    }\r\n  }, [secondRow]);\r\n\r\n  useEffect(() => {\r\n    if (thirdRow.length === 3) {\r\n      if (isAllTheSameValue(thirdRow)) {\r\n        setAllTheSame(\"thirdRow\");\r\n      }\r\n    }\r\n  }, [thirdRow]);\r\n\r\n  useEffect(() => {\r\n    if (firstColumn.length === 3) {\r\n      if (isAllTheSameValue(firstColumn)) {\r\n        setAllTheSame(\"firstColumn\");\r\n      }\r\n    }\r\n  }, [firstColumn]);\r\n\r\n  useEffect(() => {\r\n    if (secondColumn.length === 3) {\r\n      if (isAllTheSameValue(secondColumn)) {\r\n        setAllTheSame(\"secondColumn\");\r\n      }\r\n    }\r\n  }, [secondColumn]);\r\n\r\n  useEffect(() => {\r\n    if (thirdColumn.length === 3) {\r\n      if (isAllTheSameValue(thirdColumn)) {\r\n        setAllTheSame(\"thirdColumn\");\r\n      }\r\n    }\r\n  }, [thirdColumn]);\r\n\r\n  useEffect(() => {\r\n    if (firstDiagonal.length === 3) {\r\n      if (isAllTheSameValue(firstDiagonal)) {\r\n        setAllTheSame(\"firstDiagonal\");\r\n      }\r\n    }\r\n  }, [firstDiagonal]);\r\n\r\n  useEffect(() => {\r\n    if (secondDiagonal.length === 3) {\r\n      if (isAllTheSameValue(secondDiagonal)) {\r\n        setAllTheSame(\"secondDiagonal\");\r\n      }\r\n    }\r\n  }, [secondDiagonal]);\r\n\r\n  const mandatoryProps = {\r\n    turn,\r\n    setTurn,\r\n    allTheSame,\r\n  };\r\n\r\n  const firstRowProps = {\r\n    firstRow,\r\n    setFirstRow,\r\n  };\r\n\r\n  const secondRowProps = {\r\n    secondRow,\r\n    setSecondRow,\r\n  };\r\n\r\n  const thirdRowProps = {\r\n    thirdRow,\r\n    setThirdRow,\r\n  };\r\n\r\n  const firstColumnProps = {\r\n    firstColumn,\r\n    setFirstColumn,\r\n  };\r\n\r\n  const secondColumnProps = {\r\n    secondColumn,\r\n    setSecondColumn,\r\n  };\r\n\r\n  const thirdColumnProps = {\r\n    thirdColumn,\r\n    setThirdColumn,\r\n  };\r\n\r\n  const firstDiagonalProps = {\r\n    firstDiagonal,\r\n    setFirstDiagonal,\r\n  };\r\n\r\n  const secondDiagonalProps = {\r\n    secondDiagonal,\r\n    setSecondDiagonal,\r\n  };\r\n\r\n  const ticTacToeSquaresProps: TicTacToeSquareProps[] = [\r\n    {\r\n      possiblePositions: [\"firstRow\", \"firstColumn\", \"firstDiagonal\"],\r\n      ...mandatoryProps,\r\n      ...firstRowProps,\r\n      ...firstColumnProps,\r\n      ...firstDiagonalProps,\r\n    },\r\n    {\r\n      possiblePositions: [\"firstRow\", \"secondColumn\"],\r\n      ...mandatoryProps,\r\n      ...firstRowProps,\r\n      ...secondColumnProps,\r\n    },\r\n    {\r\n      possiblePositions: [\"firstRow\", \"thirdColumn\", \"secondDiagonal\"],\r\n      ...mandatoryProps,\r\n      ...firstRowProps,\r\n      ...thirdColumnProps,\r\n      ...secondDiagonalProps,\r\n    },\r\n    {\r\n      possiblePositions: [\"secondRow\", \"firstColumn\"],\r\n      ...mandatoryProps,\r\n      ...secondRowProps,\r\n      ...firstColumnProps,\r\n    },\r\n    {\r\n      possiblePositions: [\r\n        \"secondRow\",\r\n        \"secondColumn\",\r\n        \"firstDiagonal\",\r\n        \"secondDiagonal\",\r\n      ],\r\n      ...mandatoryProps,\r\n      ...secondRowProps,\r\n      ...secondColumnProps,\r\n      ...firstDiagonalProps,\r\n      ...secondDiagonalProps,\r\n    },\r\n    {\r\n      possiblePositions: [\"secondRow\", \"thirdColumn\"],\r\n      ...mandatoryProps,\r\n      ...secondRowProps,\r\n      ...thirdColumnProps,\r\n    },\r\n    {\r\n      possiblePositions: [\"thirdRow\", \"firstColumn\", \"secondDiagonal\"],\r\n      ...mandatoryProps,\r\n      ...thirdRowProps,\r\n      ...firstColumnProps,\r\n      ...secondDiagonalProps,\r\n    },\r\n    {\r\n      possiblePositions: [\"thirdRow\", \"secondColumn\"],\r\n      ...mandatoryProps,\r\n      ...thirdRowProps,\r\n      ...secondColumnProps,\r\n    },\r\n    {\r\n      possiblePositions: [\"thirdRow\", \"thirdColumn\", \"firstDiagonal\"],\r\n      ...mandatoryProps,\r\n      ...thirdRowProps,\r\n      ...thirdColumnProps,\r\n      ...firstDiagonalProps,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <TicTacToeWrapper>\r\n      <TicTacToeArea>\r\n        {ticTacToeSquaresProps.map((ticTacToeSquareProps, index) => (\r\n          <TicTacToeSquare key={index} {...ticTacToeSquareProps} />\r\n        ))}\r\n      </TicTacToeArea>\r\n    </TicTacToeWrapper>\r\n  );\r\n};\r\n\r\nconst TicTacToeWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst TicTacToeArea = styled.div`\r\n  max-width: 500px;\r\n  min-height: 500px;\r\n  width: 100%;\r\n  border: 1px solid black;\r\n  margin: 0 auto;\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport default TicTacToe;\r\n","import TicTacToe from \"./tic-tac-toe/tic-tac-toe.container\";\n\nfunction App() {\n  return <TicTacToe />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}